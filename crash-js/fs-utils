#!/usr/bin/env node

// SPDX-License-Identifier: AGPL-3.0-or-later

//    ----------------------------------------------------------------------
//    Copyright Â© 2024, 2025  Pellegrino Prevete
//
//    All rights reserved
//    ----------------------------------------------------------------------
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Affero General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program.  If not, see <https://www.gnu.org/licenses/>.

const
  _fs =
    require(
      "fs");
const
  _path_module =
    require(
      'path');
_path_module_basename =
  _path_module.basename;
_path_module_dirname =
  _path_module.dirname;
_path_module_join =
  _path_module.join;
_path_module_parse =
  _path_module.parse;
const
  _json_parse =
    JSON.parse;
const
  _json_display =
    JSON.stringify;

function
  _basename(
    _file_path) {
  let
    _dir;
  _dir =
    _path_module_basename(
      _file_path);
  return _dir;
}


function
  _dirname(
    _file_path) {
  let
    _dir;
  _dir =
    _path_module_dirname(
      _file_path);
  return _dir;
}


function
  _file_exists(
    _path) {
  let
    _exists,
    _return;
  _return =
    false;
  _exists =
    _fs.existsSync(
      _path);
  if (_exists) {
    _return =
      true;
  }
  return _return;
}


function
  _file_read(
    _path) {
  let
    _read_opts,
    _return;
  _read_opts =
   {"encoding":
      "utf8",
    "flag":
      'r'};
  _return =
    _fs.readFileSync(
      _path,
      _read_opts);
  return _return;
}


function
  _file_write(
    _path,
    _content) {
  _fs.writeFileSync(
    _path,
    _content);
}


function
  _path_join(
    _paths) {
  let
    _path;
  _path =
    _path_module_join.apply(
      null,
      _paths);
  return _path;
}


function
  _ext_rm(
    _path) {
  let
    _dir,
    _name,
    _paths;
  _dir =
    _path_module_parse(
      _path).dir;
  _name =
    _path_module_parse(
      _path).name;
  _paths = [
    _dir,
    _name];
  return _path_join(
    _paths); 
}


function
  _json_read(
    _json_path) {
  let
    _json_str,
    _json;
  _json_str =
    _file_read(
      _json_path);
  _json =
    _json_parse(
      _json_str);
  return _json;
}

module.exports = {
  _basename:
    _basename,
  _dirname:
    _dirname,
  _ext_rm:
    _ext_rm,
  _file_exists:
    _file_exists,
  _file_read:
    _file_read,
  _file_write:
    _file_write,
  _path_join:
    _path_join,
  _json_read:
    _json_read
};
